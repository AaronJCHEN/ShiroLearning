<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/cache  http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!-- ehcache part -->
    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml" />
        <property name="shared" value="true" />
    </bean>
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>
    <!--<bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>

    <cache:annotation-driven cache-manager="springCacheManager" />-->

    <!-- Shiro Part -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <constructor-arg index="0" value="MD5" />
    </bean>
    <bean id="realmForShiro" class="com.sjw.ShiroTest.Config.RealmForShiro">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
        <property name="permissionsLookupEnabled" value="true" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 会话Cookie模板 -->
    <!--     <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <constructor-arg value="sid"/>
            <property name="httpOnly" value="true"/>
            <property name="maxAge" value="-1"/>
        </bean> -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="8640"/><!-- 1天 -->
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager"
          class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <bean id="sessionFactory" class="com.sjw.ShiroTest.Settings.Shiro.SessionForRedisFactory">
        <property name="key" value="SessionList"/>
    </bean>

    <bean id="sessionForRedisDao" class="com.sjw.ShiroTest.Settings.Shiro.SessionForRedisDao">
        <property name="onlyEhCache" value="false" />
        <property name="seconds" value="1200000" />
        <property name="key" value="SessionList" />
    </bean>

    <bean id="sessionStsListener" class="com.sjw.ShiroTest.Settings.Shiro.SessionStsListener" />

    <bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1200000" />
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="sessionDAO" ref="sessionForRedisDao" />
        <property name="sessionListeners">
            <list>
                <ref bean="sessionStsListener"/>
            </list>
        </property>
    </bean>

    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="defaultWebSessionManager"/>
        <property name="realm" ref="realmForShiro" />
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager" />
    </bean>

    <!--
   Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行
   Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持
-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/loginPage.jsp"页面 -->
        <property name="loginUrl" value="/auth/login" />
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
        <!-- <property name="successUrl" value="/" ></property> -->
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <property name="unauthorizedUrl" value="/" />
        <property name="filterChainDefinitions">
            <value>
                /auth/*=anon
                /druid/*=authc,roles[MANAGER]
                /index/*=authc
            </value>
        </property>
    </bean>
</beans>