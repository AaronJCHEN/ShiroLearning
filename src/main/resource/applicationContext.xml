<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:redis="http://www.springframework.org/schema/redis"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd  
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">       
    	<property name="location" value="classpath:database.properties"/>
    </bean>  
	
    <!-- Druid connection pool -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="url" value="${jdbc.location}" />
	    <!-- <property name="username" value="${jdbc_user}" />
	    <property name="password" value="${jdbc_password}" /> -->
	
	    <property name="filters" value="stat,slf4j" />
	
	    <property name="maxActive" value="20" />
	    <property name="initialSize" value="1" />
	    <property name="maxWait" value="60000" />
	    <property name="minIdle" value="1" />
	
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	
	    <property name="testWhileIdle" value="false" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
		
		<!-- comment for sqlite -->
		<!-- <property name="testWhileIdle" value="true" />
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxOpenPreparedStatements" value="20" /> -->
	</bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
    
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <aop:config proxy-target-class="true" />
    
    <!-- package scan for transaction -->
    <context:component-scan base-package="com.sjw.ShiroTest.ServiceImpl" />
	<context:component-scan base-package="com.sjw.ShiroTest.DaoImpl" />
	<context:component-scan base-package="com.sjw.ShiroTest.Settings" />

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    	<constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

	<!-- redis part -->
    <!--redisConnectionFactory's name can't be changed which is related to redis listener-->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true" />
    </bean>
	
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="txRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="enableTransactionSupport" value="true" />
	</bean>

	<!--Serializable in redis-->
	 <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

	<!--Redis publish and subscribe function-->
	<bean id="redisMsgListener" class="com.sjw.ShiroTest.Settings.Redis.SessionMsgListener" />

    <redis:listener-container>
        <redis:listener ref="redisMsgListener" method="handleMessage" serializer="jdkSerializer" topic="ShiroSession" />
	</redis:listener-container>

    <!-- Tiles part -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    	<property name="definitions">
       		<list>
            	<value>/WEB-INF/tiles-defs.xml</value>
        	</list>
    	</property>
	</bean>
</beans>